{"ast":null,"code":"var _jsxFileName = \"/home/sumanjit/projects/eth_daddy/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Search from './components/Search';\nimport Domain from './components/Domain';\n\n// ABIs\nimport ETHDaddy from './abis/ETHDaddy.json';\n\n// Config\nimport config from './config.json';\n//import { NomicLabsHardhatPluginError } from 'hardhat/plugins'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [ethDaddy, setETHDaddy] = useState(null);\n  const [domains, setDomains] = useState([]);\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n    const network = await provider.getNetwork();\n    console.log(network);\n    const ethDaddy = new ethers.Contract(config[network.chainId].ETHDaddy.address, ETHDaddy, provider);\n    setETHDaddy(ethDaddy);\n    const maxSupply = await ethDaddy.maxSupply();\n    //console.log(maxSupply.toString())\n    const domains = [];\n    for (var i = 1; i <= maxSupply; i++) {\n      const dpmain = await ethDaddy.getDomain(i);\n      domains.push(domains);\n    }\n    setDomains(domains);\n    window.ethereum.on('accountsChanged', async () => {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cards__title\",\n        children: \"Why you need a domain name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cards__description\",\n        children: \"Own your custom username, use it across services, and be able to store an avatar and other profile data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FhaElBNt+iHzCB3qKw69WYQnVY4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Search","Domain","ETHDaddy","config","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","ethDaddy","setETHDaddy","domains","setDomains","loadBlockchainData","providers","Web3Provider","window","ethereum","network","getNetwork","console","log","Contract","chainId","address","maxSupply","i","dpmain","getDomain","push","on","accounts","request","method","utils","getAddress","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/sumanjit/projects/eth_daddy/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\n\n// Components\nimport Navigation from './components/Navigation'\nimport Search from './components/Search'\nimport Domain from './components/Domain'\n\n// ABIs\nimport ETHDaddy from './abis/ETHDaddy.json'\n\n// Config\nimport config from './config.json';\n//import { NomicLabsHardhatPluginError } from 'hardhat/plugins'\n\nfunction App() {\n\n  const [provider, setProvider] = useState(null)\n  const [account, setAccount] = useState(null)\n  const [ethDaddy, setETHDaddy] = useState(null)\n  const [domains, setDomains] = useState([])\n\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    setProvider(provider)\n\n    const network = await provider.getNetwork()\n    console.log(network)\n\n    const ethDaddy = new ethers.Contract(config[network.chainId].ETHDaddy.address, ETHDaddy, provider)\n    setETHDaddy(ethDaddy)\n\n    const maxSupply = await ethDaddy.maxSupply()\n    //console.log(maxSupply.toString())\n    const domains = []\n\n    for (var i = 1; i<= maxSupply; i++) {\n      const dpmain = await ethDaddy.getDomain(i)\n      domains.push(domains)\n    } \n    setDomains(domains)\n\n    window.ethereum.on('accountsChanged', async () => {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts'});\n      const account = ethers.utils.getAddress(accounts[0])\n      setAccount(account);\n    })\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, [])\n\n  return (\n    <div>\n      <Navigation account={account} setAccount={setAccount} />\n\n      <Search />\n\n      <div className='cards__section'>\n\n        <h2 className='cards__title'>Why you need a domain name </h2>\n        <p className='cards__description'>\n          Own your custom username, use it across services, and\n          be able to store an avatar and other profile data.\n        </p>\n\n        <hr />\n\n        <div className='cards'></div>\n        \n      </div>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA,OAAOC,QAAQ,MAAM,sBAAsB;;AAE3C;AACA,OAAOC,MAAM,MAAM,eAAe;AAClC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMmB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMR,QAAQ,GAAG,IAAIV,MAAM,CAACmB,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnEX,WAAW,CAACD,QAAQ,CAAC;IAErB,MAAMa,OAAO,GAAG,MAAMb,QAAQ,CAACc,UAAU,CAAC,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IAEpB,MAAMT,QAAQ,GAAG,IAAId,MAAM,CAAC2B,QAAQ,CAACtB,MAAM,CAACkB,OAAO,CAACK,OAAO,CAAC,CAACxB,QAAQ,CAACyB,OAAO,EAAEzB,QAAQ,EAAEM,QAAQ,CAAC;IAClGK,WAAW,CAACD,QAAQ,CAAC;IAErB,MAAMgB,SAAS,GAAG,MAAMhB,QAAQ,CAACgB,SAAS,CAAC,CAAC;IAC5C;IACA,MAAMd,OAAO,GAAG,EAAE;IAElB,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAGD,SAAS,EAAEC,CAAC,EAAE,EAAE;MAClC,MAAMC,MAAM,GAAG,MAAMlB,QAAQ,CAACmB,SAAS,CAACF,CAAC,CAAC;MAC1Cf,OAAO,CAACkB,IAAI,CAAClB,OAAO,CAAC;IACvB;IACAC,UAAU,CAACD,OAAO,CAAC;IAEnBK,MAAM,CAACC,QAAQ,CAACa,EAAE,CAAC,iBAAiB,EAAE,YAAY;MAChD,MAAMC,QAAQ,GAAG,MAAMf,MAAM,CAACC,QAAQ,CAACe,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAqB,CAAC,CAAC;MAChF,MAAM1B,OAAO,GAAGZ,MAAM,CAACuC,KAAK,CAACC,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpDvB,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdoB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAkC,QAAA,gBACElC,OAAA,CAACN,UAAU;MAACW,OAAO,EAAEA,OAAQ;MAACC,UAAU,EAAEA;IAAW;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExDtC,OAAA,CAACL,MAAM;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVtC,OAAA;MAAKuC,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAE7BlC,OAAA;QAAIuC,SAAS,EAAC,cAAc;QAAAL,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7DtC,OAAA;QAAGuC,SAAS,EAAC,oBAAoB;QAAAL,QAAA,EAAC;MAGlC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJtC,OAAA;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAENtC,OAAA;QAAKuC,SAAS,EAAC;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAACpC,EAAA,CA5DQD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AA8DZ,eAAeA,GAAG;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}