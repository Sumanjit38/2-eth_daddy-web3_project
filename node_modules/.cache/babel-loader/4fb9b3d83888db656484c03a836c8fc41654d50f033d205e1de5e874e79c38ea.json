{"ast":null,"code":"var _jsxFileName = \"/home/sumanjit/projects/eth_daddy/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\n\n// Components\nimport Navigation from './components/Navigation';\nimport Search from './components/Search';\nimport Domain from './components/Domain';\n\n// ABIs\nimport ETHDaddy from './abis/ETHDaddy.json';\n\n// Config\nimport config from './config.json';\n//import { NomicLabsHardhatPluginError } from 'hardhat/plugins'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    setProvider(provider);\n    const network = await provider.getNetwork();\n    console.log(network);\n    const ethDaddy = new ethers.Contract(config[network.chainId].ETHDaddy.address, ETHDaddy, provider);\n    window.ethereum.on('accountsChanged', async () => {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const account = ethers.utils.getAddress(accounts[0]);\n      setAccount(account);\n    });\n  };\n  useEffect(() => {\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      account: account,\n      setAccount: setAccount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"cards__title\",\n        children: \"Why you need a domain name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cards__description\",\n        children: \"Own your custom username, use it across services, and be able to store an avatar and other profile data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i+zB8keCxDF/QrnNMVOOnOkxZRo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","Navigation","Search","Domain","ETHDaddy","config","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","loadBlockchainData","providers","Web3Provider","window","ethereum","network","getNetwork","console","log","ethDaddy","Contract","chainId","address","on","accounts","request","method","utils","getAddress","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/sumanjit/projects/eth_daddy/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\n\n// Components\nimport Navigation from './components/Navigation'\nimport Search from './components/Search'\nimport Domain from './components/Domain'\n\n// ABIs\nimport ETHDaddy from './abis/ETHDaddy.json'\n\n// Config\nimport config from './config.json';\n//import { NomicLabsHardhatPluginError } from 'hardhat/plugins'\n\nfunction App() {\n\n  const [provider, setProvider] = useState(null)\n  const [account, setAccount] = useState(null)\n\n  const loadBlockchainData = async () => {\n    const provider = new ethers.providers.Web3Provider(window.ethereum)\n    setProvider(provider)\n\n    const network = await provider.getNetwork()\n    console.log(network)\n\n    const ethDaddy = new ethers.Contract(config[network.chainId].ETHDaddy.address, ETHDaddy, provider)\n\n    window.ethereum.on('accountsChanged', async () => {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts'});\n      const account = ethers.utils.getAddress(accounts[0])\n      setAccount(account);\n    })\n  }\n\n  useEffect(() => {\n    loadBlockchainData()\n  }, [])\n\n  return (\n    <div>\n      <Navigation account={account} setAccount={setAccount} />\n\n      <Search />\n\n      <div className='cards__section'>\n\n        <h2 className='cards__title'>Why you need a domain name </h2>\n        <p className='cards__description'>\n          Own your custom username, use it across services, and\n          be able to store an avatar and other profile data.\n        </p>\n\n        <hr />\n\n        <div className='cards'></div>\n        \n      </div>\n\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;;AAE/B;AACA,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;;AAExC;AACA,OAAOC,QAAQ,MAAM,sBAAsB;;AAE3C;AACA,OAAOC,MAAM,MAAM,eAAe;AAClC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMe,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMJ,QAAQ,GAAG,IAAIV,MAAM,CAACe,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;IACnEP,WAAW,CAACD,QAAQ,CAAC;IAErB,MAAMS,OAAO,GAAG,MAAMT,QAAQ,CAACU,UAAU,CAAC,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IAEpB,MAAMI,QAAQ,GAAG,IAAIvB,MAAM,CAACwB,QAAQ,CAACnB,MAAM,CAACc,OAAO,CAACM,OAAO,CAAC,CAACrB,QAAQ,CAACsB,OAAO,EAAEtB,QAAQ,EAAEM,QAAQ,CAAC;IAElGO,MAAM,CAACC,QAAQ,CAACS,EAAE,CAAC,iBAAiB,EAAE,YAAY;MAChD,MAAMC,QAAQ,GAAG,MAAMX,MAAM,CAACC,QAAQ,CAACW,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAqB,CAAC,CAAC;MAChF,MAAMlB,OAAO,GAAGZ,MAAM,CAAC+B,KAAK,CAACC,UAAU,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpDf,UAAU,CAACD,OAAO,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdgB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAA0B,QAAA,gBACE1B,OAAA,CAACN,UAAU;MAACW,OAAO,EAAEA,OAAQ;MAACC,UAAU,EAAEA;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExD9B,OAAA,CAACL,MAAM;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEV9B,OAAA;MAAK+B,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAE7B1B,OAAA;QAAI+B,SAAS,EAAC,cAAc;QAAAL,QAAA,EAAC;MAA2B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7D9B,OAAA;QAAG+B,SAAS,EAAC,oBAAoB;QAAAL,QAAA,EAAC;MAGlC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEJ9B,OAAA;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN9B,OAAA;QAAK+B,SAAS,EAAC;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEH,CAAC;AAEV;AAAC5B,EAAA,CA/CQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}